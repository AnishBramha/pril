name: Build and Release

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact_name: pril-editor
            asset_name: pril-editor-linux.tar.gz
          - os: macos-latest
            artifact_name: pril-editor
            asset_name: pril-editor-macos.zip
          - os: windows-latest
            artifact_name: pril-editor.exe
            asset_name: pril-editor-windows.zip

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libwxgtk3.2-dev build-essential make

    - name: Install Dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: brew install wxwidgets

    - name: Install Dependencies (Windows)
      if: matrix.os == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-wxwidgets
          make

    - name: Build application
      shell: ${{ matrix.os == 'windows-latest' && 'msys2 {0}' || 'bash' }}
      run: make

    - name: Package artifact
      shell: bash
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          7z a ${{ matrix.asset_name }} ${{ matrix.artifact_name }}
        elif [ "${{ matrix.os }}" == "macos-latest" ]; then
          zip ${{ matrix.asset_name }} ${{ matrix.artifact_name }}
        else
          tar -czvf ${{ matrix.asset_name }} ${{ matrix.artifact_name }}
        fi

    - name: Upload Release Asset
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./${{ matrix.asset_name }}
        asset_name: ${{ matrix.asset_name }}
        asset_content_type: application/octet-stream

    - name: Upload Build Artifact
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: ./${{ matrix.asset_name }}
